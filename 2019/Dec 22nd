1013. Partition Array Into Three Parts With Equal Sum
Solution:
之前的两个for会超时
def canThreePartsEqualSum(self, A: List[int]) -> bool:
        if sum(A)%3!=0: return False
        count, count_sum, target = 0, 0, sum(A)/3
        for i in A:
            count_sum += i
            if count_sum == target:
                count+=1
                if count == 2:
                    return True
                count_sum = 0
        return count>=3

521. Longest Uncommon Subsequence I 
一样的话就没有uncommon，不一样，就是最长的那个
Solution:
def findLUSlength(self, a: str, b: str) -> int:
    return max(len(a), len(b)) if a != b else -1

896. Monotonic Array
Solution:
排序不变化或者是反的
def isMonotonic(self, A: List[int]) -> bool:
        sor = sorted(A)
        if sor==A:
            return True
        if sor[::-1] == A:
            return True
        return False

917. Reverse Only Letters
非字符不动为止，字符反向
Solution:
def reverseOnlyLetters(self, S: str) -> str:
        alpha = [i for i in S if i.isalpha()]
        back = ""
        count = 0
        for i in range(len(S)):
            if S[i].isalpha()!=1:
                back += S[i]
            else:
                back+=alpha[len(alpha)-count-1]
                count += 1
        return back

788. Rotated Digits
翻转180度有效且不与原来相同
Solution:
必须先确定没有347，再看有没有2569
def rotatedDigits(self, N: int) -> int:
        count = 0
        for i in range(1, N+1):
            if any(x in str(i) for x in ["3", "4", "7"]):
                continue
            if any(x in str(i) for x in ["2", "5", "6", "9"]):
                count += 1
        return count

292. Nim Game
一次移走1-3块间的石头，最后赢
Solution:
def canWinNim(self, n: int) -> bool:
        return n % 4 != 0

485. Max Consecutive Ones
Solution:
def findMaxConsecutiveOnes(self, nums: List[int]) -> int:
        try:
            start = nums.index(0)
            first = nums.index(0)
            last = nums[::-1].index(0)
        except:
            return len(nums)
        maxx = start
        for i in range(start+1, len(nums)):
            if nums[i] == 0:
                end = i
                maxx = max(maxx, end-start-1)
                start = end
        return max(maxx, first, last)

283. Move Zeroes
Solution:
def moveZeroes(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        count = len(nums)
        i=0
        for _ in range(count):
            if nums[i] == 0:
                del nums[i]
                nums.append(0)
            else:
                i+=1

1184. Distance Between Bus Stops
顺时针逆时针都可以，求最短距离
Solution:
def distanceBetweenBusStops(self, distance: List[int], start: int, destination: int) -> int:
        total = sum(distance)
        dist = 0
        if start>destination:
            destination += len(distance)
            for i in range(start, destination):
                dist += distance[i%len(distance)]
        else:
            for i in range(start, destination):
                dist += distance[i]   
        return min(dist, total-dist)

748. Shortest Completing Word
Solution:
