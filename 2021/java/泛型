Java 泛型中的类型参数只在编译时可见，javac 会去掉类型参数，这个被称为类型擦除（type erasure）。
在生成的Java字节代码中是不包含泛型中的类型信息的，但会保留泛型的一些踪迹，在运行时通过反射可以看到

泛型的类型参数不能用在Java异常处理的catch语句中。因为异常处理是由JVM在运行时刻来进行的。由于类型信息被擦除，
JVM是无法区分两个异常类型MyException<String>和MyException<Integer>的。对于JVM来说，它们都是 MyException类型的。也就无法执行与异常对应的catch语句。

在Java中，有“未知类型”这一明确的概念，使用 <?> 表示。
正因为ArrayList<?>包含的元素类型是不确定的，就不能通过new ArrayList<?>()的方法来创建一个新的ArrayList对象。在Java语言的规范中，是禁止实例化负载为未知类型的容器的。


当你需要从一个数据结构中获取数据时(get)，那么就使用 ? extends T；
如果你需要存储数据(put)到一个数据结构时，那么就使用 ? super T； 
如果你又想存储数据，又想获取数据，那么就不要使用通配符 ? ，即直接使用具体泛型T。
