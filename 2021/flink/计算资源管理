在 Flink 中，计算资源的是以 Slot 作为基本单位进行分配的。

在 Flink 集群中，每个 TaskManager 都是一个单独的 JVM 进程（非 MiniCluster 模式）并且在一个 TaskManager 中可能运行多个子任务，这些子任务都在各自独立的线程中运行。
为了控制一个 TaskManager 中可以运行的任务的数量，引入了 Task Slot 的概念。

每一个 Task Slot 代表了 TaskManager 所拥有的计算资源的一个固定的子集。例如，一个拥有 3 个 slot 的 TaskManager，每个 slot 可以使用 1⁄3 的内存。
这样，运行在不同 slot 中的子任务不会竞争内存资源。目前 Flink 还不支持 CPU 的隔离，只支持内存的隔离。

每个 TaskManager 有多个 slot 的话，就意味着可以有更多的子任务运行在同一个 JVM 中。
而在同一个 JVM 进程中的子任务，可以共享TCP连接和心跳消息，减少数据的网络传输，也能共享一些数据结构。一定程度上减少了每个子任务的消耗。
