717. 1-bit and 2-bit Characters
Two kinds of characters, 0 and "11" or "10". To check if the given string follows this rule. 
Solution: Meet "1" means 2-bit character, jump two steps, "0" then 1 step. Finally check if the point stays at the last position.

383. Ransom Note
Check if B string can be constructed from A. letter can only be used once. 
Solution: count each characters in A and B, if each of B is smaller than A, return true.
Legendary: return [Counter(magazine)[ch] >= Counter(ransomNote)[ch] 
          for ch in Counter(ransomNote)].count(True) == len(Counter(ransomNote))
          
67. Add Binary
No description. 
Solution: bin(int(a, 2)+int(b, 2)).replace('0b', '')

258. Add Digits
Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.
Solution: return num % 9 or 9

415. Add Strings
Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.
Solution: return str(eval('{} + {}'.format(num1, num2))) 将字符串str当成有效的表达式来求值并返回计算结果

989. Add to Array-Form of Integer
1234->[1,2,3,4], then add K, at last transfer back to [1, 2, 3, 4]-like.
Solution: return list(str(int(str(A).replace('[', '').replace(']', '').replace(',', '').replace(' ', ''))+K))

441. Arranging Coins
