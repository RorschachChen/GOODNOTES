If that's my problem, let it be. 

1295. Find Numbers with Even Number of Digits
Given an array nums of integers, return how many of them contain an even number of digits. 
Solution:
def findNumbers(self, nums: List[int]) -> int:
        ans = 0
        for num in nums:
            if int(math.log(num, 10))%2==1:
                ans += 1
        return ans

1299. Replace Elements with Greatest Element on Right Side
Given an array arr, replace every element in that array with the greatest element among the elements to its right, 
and replace the last element with -1.
After doing so, return the array.
Solution:
Ohhhhhhhhhhhhhhhhhhhhhh 100% 100%
def replaceElements(self, arr: List[int]) -> List[int]:
        if len(arr) == 1:
            return [-1]
        res = []
        start = 1
        while len(res)<=len(arr)-1:
            nextmax = arr[start:].index(max(arr[start:]))
            res.extend([max(arr[start:])]*(nextmax+1))
            start += nextmax+1
            if start > len(arr)-1:
                break
        del res[len(arr)-1:]
        res.append(-1)
        return res

5295. Find N Unique Integers Sum up to Zero
Given an integer n, return any array containing n unique integers such that they add up to 0.
Solution:
def sumZero(self, n: int) -> List[int]:
        ans = [i for i in range(1, n)]
        ans.append(-int(n*(n-1)/2))
        return ans

720. Longest Word in Dictionary
Given a list of strings words representing an English Dictionary, find the longest word in words that can be built one 
character at a time by other words in words. If there is more than one possible answer, return the longest word with the 
smallest lexicographical order.
Solution:
def longestWord(self, words: List[str]) -> str:
        words.sort()
        res = set([''])
        longestWord = ""
        for word in words:
            if word[:-1] in res:
                res.add(word)
                if len(word) > len(longestWord):
                    longestWord = word
        return longestWord

27. Remove Element
Solution:
不是val就填到nums前面，用一个pointer来确认
def removeElement(self, nums: List[int], val: int) -> int:
        fi = 0
        for i in range(len(nums)):
            if nums[i]!=val:
                nums[fi] = nums[i]
                fi += 1
        return fi

1128. Number of Equivalent Domino Pairs
Solution:
def numEquivDominoPairs(self, dominoes: List[List[int]]) -> int:
        dd = {}
        for domino in dominoes:
            name = ""
            domino = sorted(domino)
            for do in domino:
                name+=str(do)
            if name in dd.keys():
                dd[name] += 1
            else:
                dd[name] = 1
        count = 0
        for key in dd.keys():
            count += dd[key]*(dd[key]-1)/2
        return int(count)

119. Pascal's Triangle II
Given a non-negative index k where k ≤ 33, return the kth index row of the Pascal's triangle.
Solution:
