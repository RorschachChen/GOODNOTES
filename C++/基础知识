compile to object file .o
Linking object files and libraries
 A library file is a collection of precompiled code that has been “packaged up” for reuse in other programs.
 "iostream" library: includes "input, output, print, ..."
 
 makefile告知如何构建程序
 
 In C++, direct memory access is not allowed
 
 int width = 5--copy
 int width( 5 )--direct initialization
 
 insertion operator<<:send the text to the console
 extraction operator>>
 
 \n不刷新，endl刷新显示
 
Initialization = The object is given a known value at the point of definition.
Assignment = The object is given a known value beyond the point of definition.
Uninitialized = The object has not been given a known value yet.

variable starts with lowercase
function also
Identifier capital letter
avoid identifiers start with _

function= sequence of statements
return-type identifier()
{
// Your code here
}
Nested functions not supported.

can only return a single value
函数中有未定义值时不会compile.

parameter是函数定义部分传入名称
argument是调用函数时传入的实例参数
调用时，parameters of function created as variables,value是argument复制过来的“pass by value.“ 没有顺序
函数内变量是局部变量

main和func相同名字的参数无关

compiler compile sequence, 
（1）main放最后
（2）forward declaration
例子：
function prototype： int add(int x, int y); 返回类型，名字，参数
main
真正func

definition实例化
one definition rule（ODR）TODO
1. a function, object, type, or template can only have one definition
2. 

declaration只告诉有这样一个变量和类型，但是不一定赋值，没初始化
all declarations are not definitions

preprocessor可看作一个单独的程序
当预处理器运行时，它将扫描代码文件（从上到下），以查找预处理器指令。
Preprocessor directives以#开头换行结尾，不是分号
#include directive 
The included contents are then preprocessed (along with the rest of the file), and then compiled.
#define macro
没有替换text: any further occurrence of the identifier is removed and replaced by nothing!

conditional preprocessor满足条件才compile
#ifdef: whether an identifier has been previously #defined
#ifndef: not
#endif.the code between the #ifdef and matching #endif is compiled

#if 0: exclude code from being compiled
#endif

#define identifiers outside of functions.

HEADER FILE
purpose of header is propagate declarations to code files.
include把文件直接填充到该处
头文件就是把前向声明全写在一个文件中，在需要调用的程序中需要include头文件
header组成：
header guard
尖括号用于告诉预处理器我们包括编译器随附的头文件，因此它应在系统目录中查找该头文件。 
双引号告诉预处理器这是我们提供的用户定义的头文件，因此它应在当前目录中查找包含我们源代码的头文件。 
transitive includes：include会把include include

头文件套娃：
用guard来保护
#ifndef SOME_UNIQUE_NAME_HERE
#define SOME_UNIQUE_NAME_HERE
// your declarations (and certain types of definitions) here
#endif
首先查看是否已经define来
SOME_UNIQUE_NAME_HERE最好是全大写的该文件
SOME_UNIQUE_NAME_HERE最好是全大写的改
