torch.chunk(tensor, chunk_num, dim)与torch.cat()原理相反，它是将tensor按dim（行或列）分割成chunk_num个tensor块，返回的是一个元组。

torch.stack()
Concatenates sequence of tensors along a new dimension.

torch.t(input) → Tensor
转置
Expects input to be <= 2-D tensor and transposes dimensions 0 and 1.
0-D and 1-D tensors are returned as it is and 2-D tensor can be seen as a short-hand function for transpose(input, 0, 1).

import torch.nn.functional as F

F.normalize(input, dim=1)

torch.nn.CosineSimilarity
Returns cosine similarity between :math:`x_1` and :math:`x_2`, computed along dim.
Input1: (∗1,D,∗2)(*, D, *2)(∗1​,D,∗2​) where D is at position dim
Input2: (∗1,D,∗2)(*, D, *2)(∗1​,D,∗2​) where D is at position dim
Output: (∗1,∗2)(∗1​,∗2​) 

torch.gather
torch.gather(input, dim, index, out=None, sparse_grad=False) → Tensor
Gathers values along an axis specified by dim.


expand(*sizes) → Tensor
Returns a new view of the self tensor with singleton dimensions expanded to a larger size.

torch.norm()
Returns the matrix norm or vector norm of a given tensor.
参数
p: the order of norm
