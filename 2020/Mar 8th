1247. Minimum Swaps to Make Strings Equal
Solution:
xx-yy消消乐，最后如果剩单个x和单个y，加2
def minimumSwap(self, s1: str, s2: str) -> int:
        res1 = collections.Counter(s1)
        res2 = collections.Counter(s2)
        if (res1['x']+res2['x'])%2!=0 or (res1['y']+res2['y'])%2!=0:
            return -1
        n_s1 = [0, 0]
        n_s2 = [0, 0]
        for i in range(len(s1)):
            if s1[i]=='x' and s2[i]=='y':
                n_s1[0]+=1
                continue
            if s1[i]=='y' and s2[i]=='x':
                n_s1[1]+=1
        ans = 0
        ans+=n_s1[0]//2+n_s1[1]//2
        if n_s1[0]%2==1:
            ans+=2
        return ans

238. Product of Array Except Self
Solution:
(超时)
def productExceptSelf(self, nums: List[int]) -> List[int]:
        ans = []
        for i in range(len(nums)):
            product = 1
            for j in nums[:i]+nums[i+1:]:
                product *= j
            ans.append(product)
        return ans
（）
def productExceptSelf(self, nums: List[int]) -> List[int]:
        ans = []
        product = 1
        cc=1 if nums[0]==0 else 0
        for i in range(1, len(nums)):
            if nums[i]==0:
                cc+=1
                pos = i
            if cc==2:
                return [0]*len(nums)
            product*=nums[i]
        ans.append(product)
        if cc==1:
            product = 1
            for i in nums[:pos]+nums[pos+1:]:
                product*=i
            tmp = [0]*pos
            tmp.append(product)
            return tmp+[0]*(len(nums)-1-pos)
        
        for i in range(1, len(nums)):
            ans.append(int(ans[0]*nums[0]/nums[i]))
        print(len(ans))
        return ans

451. Sort Characters By Frequency
Solution:
def frequencySort(self, s: str) -> str:
        dd = {}
        for i in range(len(s)):
            dd[s[i]] = dd.setdefault(s[i], 0) + 1
        ans = ""
        
        dd = sorted(dd.items(),key = lambda x:x[1], reverse = True)
        print(dd)
        for key in dd:
            ans+=key[0]*key[1]
        return ans

